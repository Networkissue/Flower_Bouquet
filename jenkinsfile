pipeline {
    agent any 
    
    environment {
        DOCKER_IMAGE = 'static_website'
        DOCKER_REGISTRY = 'dnetworkhub'
        CONTAINER_PORT = '8083' // Port to expose
    }

    stages {
        stage("GIT CLONING...") {
            steps {
                git url: 'https://github.com/Networkissue/Flower_Bouquet.git', branch: 'main'
            }
        }

        stage('DOCKER BUILD...') {
            steps {
                script {
                    sh "docker build -t ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${env.BUILD_NUMBER} ."
                    sh "docker tag ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${env.BUILD_NUMBER} ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:latest"
                }
            }
        }

        stage('PUSH TO DOCKERHUB...') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASSWORD')]) {
                    script {
                        sh 'docker login -u $DOCKER_USER -p $DOCKER_PASSWORD'
                        sh "docker push ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${env.BUILD_NUMBER}"
                        sh "docker push ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:latest"
                    }
                }
            }
        }

        stage('RUN CONTAINER...') {
            steps {
                script {
                    // Stop and remove any running container with the same name
                    sh "docker stop static_website || true"
                    sh "docker rm static_website || true"

                    // Run the new container
                    sh "docker run -d --name static_website -p ${CONTAINER_PORT}:80 ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${env.BUILD_NUMBER}"
                }
            }
        }
    }
}
